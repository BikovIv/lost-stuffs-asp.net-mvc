@model LostStuffs.Entities.LostStuff

@{
    ViewBag.Title = "Edit";

    var listImagePath = (List<string>)ViewData["ImagePathList"]; // Cast the list
    var imageNameList = (List<string>)ViewData["ImageNameList"];

    Char[] separator = new Char[1];
    separator[0] = '/';

}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "LostStuffs"))
{
    <img src="@Url.Content(Model.ImagePath)" style="width:150px; height:150px" />

    <div class="form-horizontal" style="border-bottom:1px solid black">
        <h4>LostStuff</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CreatedAt)

        @Html.HiddenFor(model => model.ImageName)
        @Html.HiddenFor(model => model.ImagePath)
        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.PhoneNumber)
        @Html.HiddenFor(model => model.UserName)


    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Update" class="btn btn-default" />
        </div>
    </div>
</div> <br />

}


@foreach (var image in listImagePath)
{
    <img src="@Url.Content(image)" width="100" height="100" />

    foreach (var imageName in imageNameList)
    {
        if (image.Split(separator).Last() == imageName)
        {
            @Html.AntiForgeryToken()

            <p>
                @Html.ActionLink("Delete", "DeleteImage", "LostStuffs", new { fileName = imageName, id = Model.Id }, null)<br />
                @Html.ActionLink("Set main image", "ChangeMainImage", "LostStuffs", new { imageName = imageName, id = Model.Id }, null)
            </p>

        }
    }
}


@using (Html.BeginForm("UploadImage", "LostStuffs", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <br /> <input type="file" name="file" id="file" accept="image/*" onchange="validation()"/><br />

    <input type="hidden" value="@Model.Id" name="id" />  //send Model.Id to controller

    <input type="submit" value="Upload image" class=" btn btn-info" />
}

<br />

<div style="border-top:1px solid black">

    <br /> @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
        function validation() {

            var fname = (document.getElementById('file').value).substring(12);

            var reg = /(.jpg|.jpeg|.png|.bmp)$/;

            if (reg.exec(fname)) {

                document.getElementById('file').value = (document.getElementById('file').value).substring(12);
            }

            else
            {
                alert("file not supported!");
                document.getElementById('file').value = null;
            }

    }
    </script>